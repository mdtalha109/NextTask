
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  hasCreatedOrg   Boolean        @default(false)
  // organizations   Organization[] @relation("UserOrganizations")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Organization {
  id              String         @id @default(uuid())
  title           String
  ownerId         String
  // owner           User           @relation("UserOrganizations", fields: [ownerId], references: [id])
  boards          Board[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}


model Board {
  id                    String @id @default(uuid())
  orgId                 String
  title                 String
  description           String? @db.Text
  lists                 List[]
  organization          Organization  @relation(fields: [orgId], references: [id], onDelete: Cascade)

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}



model List {
  id        String @id @default(uuid())
  title     String
  order     Int

  boardId   String
  board     Board @relation(fields: [boardId], references: [id], onDelete: Cascade)
  cards     Card[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([boardId])
}

model Card {
  id          String @id @default(uuid())
  title       String
  order       Int
  description String? @db.Text

  listId      String
  list        List  @relation(fields: [listId], references: [id], onDelete: Cascade)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([listId])
}